alias functionNum R1;
alias LockID R2;

if (functionNum == ACQUIRE_KERN_LOCK) then
  if (CORE == SECONDARY_CORE && ([SYSTEM_STATUS_TABLE + 5] != 0 || [SYSTEM_STATUS_TABLE + 7] != 0)) then
    if ([PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 5*CORE + 1]*16 + 4] == RUNNING) then
      [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 5*CORE + 1]*16 + 4] = READY;
    endif;

    backup;
    call SCHEDULER;
    restore;
  endif;

  while (tsl(KERN_LOCK) == 1) do
    continue;
  endwhile;
endif;

if (functionNum == ACQUIRE_SCHED_LOCK) then
  while (tsl(SCHED_LOCK) == 1) do
    continue;
  endwhile;
endif;

if (functionNum == ACQUIRE_GLOCK) then
  while (tsl(GLOCK) == 1) do
    continue;
  endwhile;
endif;

if (functionNum == RELEASE_LOCK) then
  [LockID] = 0;
endif;

return;
