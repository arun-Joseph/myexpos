alias functionNum R1;

if (functionNum == GET_FREE_PAGE) then
  [SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] + 1;

  while ([SYSTEM_STATUS_TABLE + 2] == 0) do
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 4] = WAIT_MEM;

    backup;
    call SCHEDULER;
    restore;
  endwhile;

  [SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] - 1;
  [SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] - 1;

  alias counter R0;
  counter = 0;
  while([MEMORY_FREE_LIST + counter] != 0) do
    counter = counter + 1;
  endwhile;

  [MEMORY_FREE_LIST + counter] = 1;
endif;

if (functionNum == RELEASE_PAGE) then
  alias page R2;

  [MEMORY_FREE_LIST + R2] = [MEMORY_FREE_LIST + R2] - 1;
  if([MEMORY_FREE_LIST + page] == 0) then
    [SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] + 1;

    alias counter R5;
    counter = 0;
    while(counter < MAX_PROC_NUM) do
      if([PROCESS_TABLE + counter*16 + 4] == WAIT_MEM) then
        [PROCESS_TABLE + counter*16 + 4] = READY;
      endif;
      counter = counter + 1;
    endwhile;
  endif;
endif;

return;
