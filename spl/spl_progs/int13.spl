alias currentPID R15;
currentPID = [SYSTEM_STATUS_TABLE + 1];

alias userSP R5;
userSP = SP;

[PROCESS_TABLE + currentPID*16 + 13] = SP;
SP = [PROCESS_TABLE + currentPID*16 + 11]*512 - 1;

alias sysCallNo R6;
sysCallNo = [[PTBR + 2*(userSP - 5)/512]*512 + (userSP - 5)%512];

alias physicalAddrRetVal R14;
physicalAddrRetVal = [PTBR + 2*(userSP - 1)/512]*512 + (userSP - 1)%512;

if (sysCallNo == INT_SEMGET) then
  [PROCESS_TABLE + currentPID*16 + 9] = INT_SEMGET;

  alias userAreaPage R7;
  userAreaPage = [PROCESS_TABLE + currentPID*16 + 11];

  alias semDescriptor R8;
  semDescriptor = 0;
  while (semDescriptor < 8) do
    if ([userAreaPage*512 + 496 + 2*semDescriptor] == -1) then
      break;
    endif;
    semDescriptor = semDescriptor + 1;
  endwhile;

  if (semDescriptor == 8) then
    [physicalAddrRetVal] = -1;
    [PROCESS_TABLE + currentPID*16 + 9] = 0;
    SP = userSP;
    ireturn;
  endif;

  alias semIndex R9;
  multipush(R5, R6, R7, R8, R14, R15);
  R1 = ACQUIRE_SEMAPHORE;
  R2 = currentPID;
  call RESOURCE_MANAGER;
  multipop(R5, R6, R7, R8, R14, R15);
  semIndex = R0;

  if(semIndex == -1) then
    [physicalAddrRetVal] = -2;
    [PROCESS_TABLE + currentPID*16 + 9] = 0;
    SP = userSP;
    ireturn;
  endif;

  [userAreaPage*512 + 496 + 2*semDescriptor] = SEMAPHORE;
  [userAreaPage*512 + 496 + 2*semDescriptor + 1] = semIndex;

  [physicalAddrRetVal] = semDescriptor;
  [PROCESS_TABLE + currentPID*16 + 9] = 0;
endif;

if (sysCallNo == INT_SEMRELEASE) then
  [PROCESS_TABLE + currentPID*16 + 9] = INT_SEMRELEASE;

  alias userAreaPage R7;
  userAreaPage = [PROCESS_TABLE + currentPID*16 + 11];

  alias semDescriptor R8;
  semDescriptor = [[PTBR + 2*(userSP - 4)/512]*512 + (userSP - 4)%512];
  if (semDescriptor < 0 || semDescriptor >= 8 || [userAreaPage*512 + 496 + 2*semDescriptor] != SEMAPHORE) then
    [physicalAddrRetVal] = -1;
    [PROCESS_TABLE + currentPID*16 + 9] = 0;
    SP = userSP;
    ireturn;
  endif;

  backup;
  R1 = RELEASE_SEMAPHORE;
  R2 = [userAreaPage*512 + 496 + 2*semDescriptor + 1];
  R3 = currentPID;
  call RESOURCE_MANAGER;
  restore;
  [userAreaPage*512 + 496 + 2*semDescriptor] = -1;

  [physicalAddrRetVal] = 0;
  [PROCESS_TABLE + currentPID*16 + 9] = 0;
endif;

SP = userSP;
ireturn;
