alias functionNum R1;
alias currentPID R2;

if (functionNum == DISK_LOAD) then
  alias page R3;
  alias block R4;

  backup;
  R1 = ACQUIRE_DISK;
  R2 = currentPID;
  call RESOURCE_MANAGER;
  restore;

  [DISK_STATUS_TABLE + 1] = 0;
  [DISK_STATUS_TABLE + 2] = page;
  [DISK_STATUS_TABLE + 3] = block;

  load(page, block);
  [PROCESS_TABLE + currentPID*16 + 4] = WAIT_DISK;

  backup;
  call SCHEDULER;
  restore;
endif;

if (functionNum == TERMINAL_WRITE) then
  alias word R3;

  backup;
  R1 = ACQUIRE_TERMINAL;
  R2 = currentPID;
  call RESOURCE_MANAGER;
  restore;

  print word;

  backup;
  R1 = RELEASE_TERMINAL;
  R2 = currentPID;
  call RESOURCE_MANAGER;
  restore;
endif;

if (functionNum == TERMINAL_READ) then
  alias wordAddr R3;

  backup;
  R1 = ACQUIRE_TERMINAL;
  R2 = currentPID;
  call RESOURCE_MANAGER;
  restore;

  read;
  [PROCESS_TABLE + currentPID*16 + 4] = WAIT_TERMINAL;

  backup;
  call SCHEDULER;
  restore;

  alias word R5;
  word = [PTBR + 2*(wordAddr/512)]*512 + wordAddr%512;
  [word] = [PROCESS_TABLE + currentPID*16 + 8];
endif;

return;
